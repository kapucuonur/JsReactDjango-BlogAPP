{"ast":null,"code":"// Define the base URL\nconst BASE_URL = process.env.NODE_ENV === 'production' ? 'https://jsreactdjango-blogapp.onrender.com' : 'http://127.0.0.1:8000';\nexport default class APIService {\n  static UpdateArticle(article_id, body, token) {\n    return fetch(`${BASE_URL}/articles/${article_id}/`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      },\n      body: JSON.stringify(body)\n    }).then(resp => {\n      if (!resp.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      return resp.json();\n    });\n  }\n\n  static InsertArticle(body, token) {\n    return fetch(`${BASE_URL}/articles/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      },\n      body: JSON.stringify(body)\n    }).then(resp => {\n      if (!resp.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      return resp.json();\n    });\n  }\n\n  static DeleteArticle(article_id, token) {\n    return fetch(`${BASE_URL}/articles/${article_id}/`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      }\n    }).then(resp => {\n      if (!resp.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      return resp.json();\n    });\n  }\n\n  static LoginUser(body) {\n    return fetch(`${BASE_URL}/auth/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    }).then(resp => {\n      if (!resp.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      return resp.json();\n    });\n  }\n\n  static RegisterUser(body) {\n    return fetch(`${BASE_URL}/users/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    }).then(resp => {\n      if (!resp.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      return resp.json();\n    });\n  }\n\n}","map":{"version":3,"names":["BASE_URL","process","env","NODE_ENV","APIService","UpdateArticle","article_id","body","token","fetch","method","headers","JSON","stringify","then","resp","ok","Error","json","InsertArticle","DeleteArticle","LoginUser","RegisterUser"],"sources":["/Users/onurkapucu/Downloads/JsReactDjango-BlogAPP/frontend/src/components/APIService.js"],"sourcesContent":["// Define the base URL\nconst BASE_URL = process.env.NODE_ENV === 'production' \n    ? 'https://jsreactdjango-blogapp.onrender.com' \n    : 'http://127.0.0.1:8000';\n\nexport default class APIService {\n    static UpdateArticle(article_id, body, token) {\n        return fetch(`${BASE_URL}/articles/${article_id}/`, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Token ${token}`\n            },\n            body: JSON.stringify(body)\n        }).then(resp => {\n            if (!resp.ok) {\n                throw new Error('Network response was not ok');\n            }\n            return resp.json();\n        });\n    }\n\n    static InsertArticle(body, token) {\n        return fetch(`${BASE_URL}/articles/`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Token ${token}`\n            },\n            body: JSON.stringify(body)\n        }).then(resp => {\n            if (!resp.ok) {\n                throw new Error('Network response was not ok');\n            }\n            return resp.json();\n        });\n    }\n\n    static DeleteArticle(article_id, token) {\n        return fetch(`${BASE_URL}/articles/${article_id}/`, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Token ${token}`\n            }\n        }).then(resp => {\n            if (!resp.ok) {\n                throw new Error('Network response was not ok');\n            }\n            return resp.json();\n        });\n    }\n\n    static LoginUser(body) {\n        return fetch(`${BASE_URL}/auth/`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(body)\n        }).then(resp => {\n            if (!resp.ok) {\n                throw new Error('Network response was not ok');\n            }\n            return resp.json();\n        });\n    }\n\n    static RegisterUser(body) {\n        return fetch(`${BASE_URL}/users/`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(body)\n        }).then(resp => {\n            if (!resp.ok) {\n                throw new Error('Network response was not ok');\n            }\n            return resp.json();\n        });\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}